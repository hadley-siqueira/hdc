def read_int : int
    v = 0
    $'scanf("%i", &v)'
    return v

class File:
    ptr  : void*

    def open : void
        @path : char*
        @mode : char*

        $'ptr = fopen(path, mode)'

    def close : void
        $'fclose((FILE*) ptr)'

    def write : void
        @str : char*

        $'fprintf((FILE*) ptr, "%s", str)'

    def write : void
        @v : int

        $'fprintf((FILE*) ptr, "%i", v)'


class Pixel:
    red   : int
    green : int
    blue  : int

    def negative : void
        @red = 255 - @red
        @green = 255 - @green
        @blue = 255 - @blue


class PPMImage:
    width  : int
    height : int
    pixels : Pixel*

    def init : void
        @width  : int
        @height : int

        @width = width
        @height = height

        $'pixels = new Pixel[width * height]'

    def clear : void
        @color : Pixel

        i = 0
        while i < @width * @height:
            pixels[i] = color
            i = i + 1

    def clear : void
        pass

    def negative : void
        i = 0

        while i < @width * @height:
            pixels[i].negative()

    def save : void
        f = File()

        f.open('/tmp/image.ppm', "w")
        f.write('P3\n')
        f.write(@width)
        f.write(" ")
        f.write(@height)
        f.write('\n255\n')

        i = 0

        while i < @width * @height:
            f.write(pixels[i].red)
            f.write(" ")
            f.write(pixels[i].green)
            f.write(" ")
            f.write(pixels[i].blue)
            f.write("\n")
            ++i

        f.close()


def main : int
    img = PPMImage()

    img.init(800, 600)
    p = Pixel()
    p.red = 255
    p.green = 0
    p.blue = 255

    img.clear(p)
    img.save()
    return 0
